#!/usr/bin/env ruby

require 'rubygems'
require 'clamp'
require 'mystro-common'
require 'awesome_print'

require 'mystro/client'

module Mystro
  class Command < Clamp::Command
    subcommand "ssh", "ssh to server" do
      option %w{-x --user}, "USER", "the user to connect as", default: "ubuntu"
      parameter "PATTERN ...", "name or pattern of server"

      def execute
        #puts "ssh: #{pattern_list}"
        client = Mystro::Client.new(Mystro.config.server, Mystro.config.token)
        list = client.compute_search(pattern_list.join(","))

        #ap list

        if list.count == 0
          puts "no servers matched"
          exit 1
        end

        if list.count > 1
          puts "more than one server was found:"
          list.each {|e| puts "  #{e["name"]}"}
          exit 1
        end

        o = list.first

        host = o["dns"] || o["long"]
        unless host
          puts "hostname not set"
          exit 1
        end

        puts "connecting as #{user} to #{o["long"] if o["long"]} (#{o["dns"]})"
        exec("ssh #{user}@#{host}")
      end
    end
    subcommand "csshx", "use csshx to connect to all servers of environment" do
      parameter "ENVIRONMENT", "environment name"

      def execute
        puts "csshx: #{environment}"
      end
    end
  end
end

Mystro::Command.run